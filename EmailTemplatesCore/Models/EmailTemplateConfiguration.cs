// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.5
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace EmailTemplatesCore.Models
{

    // EmailTemplate
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.30.0.0")]
    public class EmailTemplateConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<EmailTemplate>
    {
        public EmailTemplateConfiguration()
            : this("dbo")
        {
        }

        public EmailTemplateConfiguration(string schema)
        {
            ToTable("EmailTemplate", schema);
            Property(x => x.Id).HasDatabaseGeneratedOption(DatabaseGeneratedOption.Identity);
            Property(x => x.TypeId).HasColumnName(@"TypeId").HasColumnType("int");
            Property(x => x.EmailFrom).HasColumnName(@"EmailFrom").HasColumnType("nvarchar").IsOptional();
            Property(x => x.Subject).HasColumnName(@"Subject").HasColumnType("nvarchar").IsOptional();
            Property(x => x.Template).HasColumnName(@"Template").HasColumnType("nvarchar(max)");
            Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("nvarchar").IsOptional();
            Property(x => x.CreatedOn).HasColumnName(@"CreatedOn").HasColumnType("datetime").IsOptional();
            Property(x => x.ModifiedBy).HasColumnName(@"ModifiedBy").HasColumnType("nvarchar").IsOptional();
            Property(x => x.ModifiedOn).HasColumnName(@"ModifiedOn").HasColumnType("datetime").IsOptional();

            // Foreign keys
            HasRequired(a => a.EmailTemplateType).WithMany(b => b.EmailTemplates).HasForeignKey(c => c.TypeId).WillCascadeOnDelete(false); // EmailTemplateType_ID_EmailTemplate_TypeId
        }
    }

}
// </auto-generated>
